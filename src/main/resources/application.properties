quarkus.http.port=8085

## ALLOW CORS
quarkus.http.cors=${ACTIVE_CORS:true}
quarkus.http.cors.origins=*
quarkus.http.cors.methods=${METHODS:GET, PUT, POST, DELETE}
quarkus.http.cors.headers=X-Custom
quarkus.http.cors.exposed-headers=Content-Type,Authorization
#quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=${ALLOW_CREDENTIALS:true}

kafka.bootstrap.servers=192.168.49.2:30092
#quarkus.kafka.snappy.enabled=true
mp.messaging.incoming.projects-in.connector=smallrye-kafka
mp.messaging.incoming.projects-in.topic=projects
mp.messaging.incoming.projects-in.group.id=idtolu-projects
mp.messaging.incoming.projects-in.partitions=3
mp.messaging.incoming.projects-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.projects-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.projects-in.auto.offset.reset=earliest
mp.messaging.incoming.projects-in.broadcast=true

#mp.messaging.outgoing.projects-out.connector=smallrye-kafka
#mp.messaging.outgoing.projects-out.topic=projects
#mp.messaging.outgoing.projects-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.outgoing.projects-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#mp.messaging.outgoing.projects-out.acks=all
#mp.messaging.outgoing.projects-out.key=true
#mp.messaging.outgoing.projects-out.compression.type=snappy

mp.messaging.incoming.alerts-in.connector=smallrye-kafka
mp.messaging.incoming.alerts-in.topic=chirpstack_as
mp.messaging.incoming.alerts-in.group.id=idtolu-projects
mp.messaging.incoming.alerts-in.partitions=3
mp.messaging.incoming.alerts-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.alerts-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.alerts-in.auto.offset.reset=earliest
mp.messaging.incoming.alerts-in.broadcast=true

mp.messaging.incoming.instance-in.connector=smallrye-kafka
mp.messaging.incoming.instance-in.topic=instances
mp.messaging.incoming.instance-in.group.id=idtolu-projects
mp.messaging.incoming.instance-in.partitions=3
mp.messaging.incoming.instance-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.instance-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.instance-in.auto.offset.reset=earliest
mp.messaging.incoming.instance-in.broadcast=true

# configure the mongoDB client for a single instance on localhost
# ,10.0.100.111:27017,10.0.100.145:27017/?replicaSet=replication-mongo
quarkus.mongodb.connection-string=${MONGO_DB_STRING_CONNECTION:mongodb://cperez_admin_projects:admin9504**@10.0.100.100:27017/?directConnection=true&serverSelectionTimeoutMS=2000&authSource=analytics}
#quarkus.mongodb.replica-set-name=replication-mongo
quarkus.mongodb.database=${MONGO_DATABASE_NAME:analytics}
#quarkus.log.category."io.quarkus.mongodb.panache.runtime".level=DEBUG

#quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN
quarkus.mailer.username=no-reply@negrdo.com
quarkus.mailer.password=4Nl@7DNkGCj1
quarkus.mailer.host=mail.negrdo.com
quarkus.mailer.port=465
quarkus.mailer.from=no-reply@negrdo.com
quarkus.mailer.start-tls=REQUIRED
quarkus.mailer.ssl=true
quarkus.mailer.login=REQUIRED
quarkus.mailer.mock=false
quarkus.log.category."io.quarkus.mailer".level=DEBUG